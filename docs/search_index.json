[["index.html", "Center for Conservation Biology | UC Riverside Installation Guide Informational Resource for Software and Application Installation Utilized by CCB Faculty &amp; Staff", " Center for Conservation Biology | UC Riverside Installation Guide Lynn Sweet | Principal Investigator, Assistant Research Ecologist Julia Parish | Data Science Intern 2022-08-02 Informational Resource for Software and Application Installation Utilized by CCB Faculty &amp; Staff Chino Canyon Wildflowers, Coachella Valley, California. Image Credit: Coachella Valley Mountains Conservancy: Bill Havert "],["intro.html", "Chapter 1 Introduction 1.1 Computer requirements 1.2 Software", " Chapter 1 Introduction This is an installation and account set up reference guide for the Center for Conservation Biology team. Team members may contribute to this reference file as we expand the tools utlizied during research efforts. 1.1 Computer requirements Work computers (laptop or desktop) operating systems should either be Windows or macOS. Please note that Windows based machine it required to run ESRI ArcDesktop and ArcPro software. Both Windows and macOS may utilize ESRI ArcOnline tools. For Mac users, update macOS to the newest supported version. Navigate to System Preferences –&gt; Software Update. For PC users, ensure you have Windows 10 or 11 installed. If not, request a Windows key from UCR IT at UC Riverside ServiceLink 1.2 Software Software covered in this reference guide includes: git GitHub Google Apps R RStudio Quarto Bookdown Slack Trello Trello 4 Slack Zotero Thank you to UC Santa Barbara’s Bren School of Environmental Science &amp; Management and National Center for Ecological Analysis and Synthesis (NCEAS) staff for providing many of the resources listed in this reference guide. Information was made available on the UCSB-MEDS GitHub page. "],["r.html", "Chapter 2 R and RStudio Installation 2.1 Install or Update R 2.2 Install or Update R Studio 2.3 Install Quarto 2.4 Learn How to Use R &amp; RStudio", " Chapter 2 R and RStudio Installation 2.1 Install or Update R R is a programming language and environment used for statistical computing and grahics. For more information, please visit What is R. To install R, visit cloud.r-project.org to download the most recent version for your operating system. 2.2 Install or Update R Studio RStudio is a software (considered an Integrated Development Environment, or IDE) that provides R programmers with an easy-to-use interface for coding in R. Note: RStudio will not work without R installed, and you won’t particularly enjoy using R without having RStudio installed. Be sure to install both! New install: To install RStudio, visit rstudio.com/products/rstudio/. Download the free (“Open Source Edition”) Desktop version for your operating system. Update: If you already have RStudio and need to update: Open RStudio, and under ‘Help’ in the top menu, choose ‘Check for updates.’ If you have the most recent release, it will return ‘No update available. You are running the most recent version of RStudio.’ Otherwise, you should follow the instructions to install an updated version. Open RStudio (logo you’ll click on shown below). If you are prompted to install Command Line Tools, do it. Mac Users There may be a need to install command line tools and XQuartz: To install command line tools (if you’re not automatically prompted), run in the Terminal tab in RStudio: xcode-select --install Visit xquartz.org to download &amp; install XQuartz. 2.3 Install Quarto This is an optional tool within R Studio that is extremely powerful, but it is not required. Quarto is a scientific publishing tool built on Pandoc that allows R, Python, Julia, and ObservableJS users to create dynamic documents, websites, books and more. As of July 2022, Quarto comes pre-installed in R Studio (v2022.07). If you haven’t updated your R Studio IDE (and concerned about doing so), you can install Quarto separately. Download Quarto here and install To use Quarto through the RStudio IDE, be sure to have at least version v2022.02 installed (see directions in step 2, above) Learn more about Quarto here. 2.4 Learn How to Use R &amp; RStudio There are a lot of resources out there to help you learn how to use R and the RStudio IDE (YouTube, Googling, StackOverflow, etc…). This is a short list of primary resources for you to reference. It is highly recommended to join R community Slack channels, R User community groups (such as R-Ladies), and UC Riverside Data Science clubs! ACM at UCR - UC Riverside community dedicated to technical, professional, and personal development in the context of computer science. R for Data Science R Markdown Cookbook Cookbook for R Advanced R R Studio (posit) Book Catalog R for Data Science Online Learning Community R OpenSci RStudio Cloud - interactive tutorials to learn data science basics. R Studio Cheatsheets - invaluable tool to learn how to use various R packages. Swirl - R package that is a built in tutorial. "],["bookdown.html", "Chapter 3 Bookdown Guide 3.1 Primary Reference Resources 3.2 Formatting 3.3 Citations 3.4 Alt Text for Accessibility 3.5 Rendering Bookdown to Build &amp; Publish", " Chapter 3 Bookdown Guide The first step to edit and add to this bookdown is to install the bookdown package from CRAN or Github. In the RStudio console, run the following: install.packages(&quot;bookdown&quot;) # or the development version # devtools::install_github(&#39;rstudio/bookdown&#39;) 3.1 Primary Reference Resources Here is a list of resources to learn how to use and edit in bookdown Bookdown Package Documentation Authoring Books with R Markdown R Markdown Cookbook R Markdown: The Definitive Guide The following information is directly taken from the bookdown package (Xie 2022). 3.2 Formatting You can use anything that Pandoc’s Markdown supports, e.g., a math equation \\(a^2 + b^2 = c^2\\). Remember each Rmd file contains one and only one chapter, and a chapter is defined by the first-level heading #. You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter 1. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. Figure 3.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 3.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 3.1. Table 3.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa 3.3 Citations You can easily write citations using .bib files within this repository formatted using BibTEX. For example, the bookdown package (Xie 2022) in this reference book, which was built on top of R Markdown and knitr (Xie 2015). 3.4 Alt Text for Accessibility Use the knitr package to add alt text to graphics in R Markdown files 3.5 Rendering Bookdown to Build &amp; Publish In your Console, type either of these commands depending on which type of render you prefer: bookdown::render_book(\"index.Rmd\", \"bookdown::gitbook\") bookdown::render_book(\"index.Rmd\", \"bookdown::pdf_book\") To compile to PDF, you need XeLaTeX. It is recommended to install TinyTeX (which includes XeLaTeX): https://yihui.name/tinytex/. References "],["git.html", "Chapter 4 Git Installation &amp; GitHub Account 4.1 Git 4.2 GitHub 4.3 Configure Git 4.4 Personal Access Token", " Chapter 4 Git Installation &amp; GitHub Account 4.1 Git Check to see if your computer already has git: Open RStudio In the terminal, run the following command: which git If git is already installed, the return to the above command should return a filepath (ex: /usr/local/bin/git). If there is no response, download and install git from here: git-scm.com/downloads. Select the default settings within the prompts except the default to master branch. This branch is being phased out, so select the option that let’s you select alternative branches (ex: main). 4.2 GitHub GitHub is a internet based code hosting platform for collaboration and version control. GitHub lets you (and others) work together on projects. Navigate to github.com, and create an account! Please use either your work or personal email account. You can add several emails to your account, and assign a particular email as the primary email for the account. Review this article on choosing a GitHub username: happygitwithr.com/github-acct.html. 4.3 Configure Git Once Git is installed and your GitHub account has been set up, Git needs to be configured on the computer. Configuring Git is required to push &amp; pull commits to GitHub. In RStudio, open the terminal. Run the following commands separately, pressing Enter after each line. Replace username and email with your GitHub account username and email. Make sure to keep the quotes around the username in the code below: git config --global user.name \"Jane Doe\" git config --global user.email janedoe@example.com Once you have entered the above command line code, check that the configuration was set correctly. In the RStudio Terminal, type the following command and hit enter: git config --list --global In the terminal, it should show code similar to this in the Terminal: user.name=janedoe user.email=janedoe@ucr.edu core.excludesfile=/Users/janedoe/.gitignore If when installing or updating Git, the default branch was not set to main (it is defaulting to the old master branch), you can change this setting globally. In the Terminal again, enter the line below: git config --global init.defaultBranch main For more information on configuring Git: check out this Git reference 4.4 Personal Access Token Once Git has been configured to commit to your GitHub account, a Personal Access Token (PAT) must be created for each computer you intend to use. A PAT is an alternative password authentication method for Git to access GitHub accounts. In the RStudio Console, install the usethis package in R by running the following code: install.packages(\"usethis\") If the usethis package is installed correctly, at the end of the stream of text there should be a message similar to the image below: Once the usethis package is installed, run the following in the RStudio Console: usethis::create_github_token() Enter your GitHub password when prompted. This should take you to the Settings/Developer settings section of your GitHub account: Note Field Change the PAT name to a meaningful reference (see image for an example). You may end up creating multiple PATs, so you want to ensure that you know which PAT is designated for each computer | server. Expiration Field This is to select a set expiration timeframe for your PAT. Setting an expiration is highly recommended, and GitHub will send you SEVERAL emails prior to it expiring to remind you to renew it. Use the drop down to select a set time frame (7 days to 90 days) or create a custom expiration time frame (exactly a year or particular date). Select Scopes Field Define access for the Personal Access Token being generated. It is recommended to select at least the following scopes: - repo - workflow - write:packages - notifications - delete repo - write:discussions - project To learn more about Scopes, visit the GitHub Scopes for OAUth Apps page. Once Scopes are selected, click on the green Generate token button: Copy the generated PAT to your clipboard. Paste and Save this PAT in a text file in a secure folder that will NEVER be accessed by other users or the internet. You can create a private folder on your personal computer to store these files. Return to RStudio Console and run the following command: gitcreds::gitcreds_set(). You will be prompted to paste the PAT into the console: Paste the PAT at the end of the line Enter password or token: and press enter. In the console, run: usethis::git_sitrep() This command should return your GitHub account information (see example below). For more information on PATs, check out GitHub’s PAT information page. "],["projmgmt.html", "Chapter 5 Project Management Tools 5.1 Trello 5.2 Slack 5.3 Google Apps 5.4 Zotero", " Chapter 5 Project Management Tools 5.1 Trello Trello is a project management app tool that provides teams the opportunity to create task lists, reference &amp; resource lists, and communicate via tagging! To connect with CCB’s Trello Workspace, send a request to CCB’s PI. The main board is CCB Team Projects. 5.2 Slack Slack is a messaging app that connects teams via channels and direct messages (DMs). To join the CCB Slack workspace, follow this link. There is a Trello app incorporated in the CCB UCR slack workspace. You can create cards in Slack for the CCB Team Projects Trello workspace. To learn how, follow this Slack connect tool. Other cool Slack workspaces to join: EcoDataScience - an environmental data science study group that started at UC Santa Barbara, but now has an international following! R4DS Online Learning Community Society for Open, Reliable, and Transparent Ecology and Evolutionary Biology (SORTEE) 5.3 Google Apps The CCB team utilizes a number of Google applications for project management, data &amp; file sharing, and communicating with colleagues. Google Calendar: There is a lab Google calendar, UCR CCB Palm Desert. This calendar maintains lab mates work and leave schedules as well as any team meetings. Please make sure this calendar is shared with you once you have obtained your UCR NetId. Google Drive: CCB utilizes Shared Drive folders as a file sharing application. You must request access to the shared drive folder from the lab P.I. Google Sites: There is a CCB Google Site that is in draft form at the moment. This site may serve as an intranet or provide public facing information in the future. If you would like edit access, please submit a request to the CCB PI. 5.4 Zotero The Center for Conservation Biology shares research references through Zotero software. Zotero is a citation management tool and allows groups to collect and share references easily. The Zotero browser extension makes it easy to copy citations from webpages. To install Zotero and the extension, please follow UC Riverside’s installation instructions here. Note: These instructions are for a Windows machine, but it is a similar process for Macs. The next step is to create a Zotero account and enable syncing to enable extension use and to be able to join the CCB Zotero Reference Group. Make sure to use your using the UCR email address when setting up the Zotero account. To connect to the CCB Zotero Reference Group, navigate to this link. If you do not have access to the Group page, please send a request that you be added to the CCB PI. For more information on how to use Zotero, check out these links: UC Riverside Zotero Tips &amp; Tricks Zotero Quick Start Guide Zotero Groups RStudio Citations - add BibTex citation format in Zotero then quickly use .bib files in R to create references in markdown. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
